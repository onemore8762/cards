import { instance } from '../../common/api/cards-api'

export const packListApi = {
  getPacks(params: getPacksParamsType = {}) {
    return instance.get<GetPacksResponseType>('/cards/pack', {
      params: params,
    })
  },
  addPacks(cardsPack: newPack) {
    return instance.post('/cards/pack', cardsPack)
  },
  update(cardsPack: newPack) {
    return instance.put('/cards/pack', cardsPack)
  },
  delete(idPack: string) {
    return instance.delete(`/cards/pack?id=${idPack}`)
  },
}
//type
export type getPacksParamsType = {
  packName?: string // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
  min?: number | null // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
  max?: number | null // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
  sortPacks?: '0updated' | '1updated' // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
  page?: number // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
  pageCount?: number // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
  user_id?: string | null
  // —á—å–∏ –∫–æ–ª–æ–¥—ã –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –∏–ª–∏ –ø—Ä–∏–¥—É—Ç –≤—Å–µ

  block?: boolean // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
  // –µ—Å–ª–∏ –≤–∞—Å –∫—Ç–æ —Ç–æ –∑–∞–±–∞–Ω–∏–ª. –¢–æ —Å –ø–æ–º–æ—â—å—é
  // –¥–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ –∫–æ–ª–æ–¥—ã
  // –∏ –ø–æ–ø—Ä–∞–≤–∏—Ç—å –∏—Ö –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∏–ª–∏ –æ–±–∂–∞–ª–æ–≤–∞—Ç—å üôÉ
}
export type newPack = {
  cardsPack: addCardsPack
}
export type addCardsPack = {
  name?: string // –µ—Å–ª–∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–¥–µ—Ç 'no Name'
  deckCover?: 'url or base64' // –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
  private?: boolean // –µ—Å–ª–∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–¥–µ—Ç false
  _id?: string // –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
}

export type PacksType = {
  _id: string
  user_id: string
  user_name: string
  private: boolean
  name: string
  path: string
  grade: number
  shots: number
  cardsCount: number
  type: string
  rating: number
  created: string
  updated: string
  more_id: string
  __v: number
}

export type GetPacksResponseType = {
  cardPacks: Array<PacksType>
  page: number
  pageCount: number
  cardPacksTotalCount: number
  minCardsCount: number
  maxCardsCount: number
  token: string
  tokenDeathTime: number
}
